{
  "permissions": {
    "allow": [
      "Bash(ls:*)",
      "Bash(find:*)",
      "Bash(git init:*)",
      "WebFetch(domain:docs.anthropic.com)",
      "Bash(gh auth:*)",
      "Bash(git remote add:*)",
      "Bash(git branch:*)",
      "Bash(git push:*)",
      "Bash(git add:*)",
      "Bash(export:*)",
      "Bash(pkill:*)",
      "Bash(git pull:*)",
      "Bash(npm run dev:*)",
      "Bash(node server.js)",
      "Bash(curl:*)",
      "Bash(grep:*)",
      "Bash(node test-s3.js)",
      "Bash(node test-upload.js)",
      "Bash(rm:*)",
      "Bash(xcodebuild test:*)",
      "Bash(xcodebuild:*)",
      "Bash(cat:*)",
      "Bash(git submodule:*)",
      "Bash(mkdir:*)",
      "Bash(mv:*)",
      "Bash(cp:*)",
      "Bash(git rm:*)",
      "Bash(pg_isready:*)",
      "Bash(brew services:*)",
      "Bash(rg:*)",
      "Bash(/usr/local/opt/postgresql@15/bin/psql:*)",
      "Bash(true)",
      "Bash(npm test)",
      "Bash(npm install)",
      "Bash(node:*)",
      "Bash(npm test:*)",
      "Bash(python3:*)",
      "Bash(psql:*)",
      "Bash(plutil:*)",
      "Bash(npm install:*)",
      "WebFetch(domain:barkpark-production.up.railway.app)",
      "Bash(git commit:*)",
      "Bash(chmod:*)",
      "Bash(./test-api.sh:*)",
      "Bash(# Test user profile update with proper phone format\nTOKEN=\"eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VySWQiOjExLCJpYXQiOjE3NDk5MTQ5NzYsImV4cCI6MTc1MDUxOTc3Nn0.6t7Eu4mE0CxYR4dpnSd-Oxa9XeXWfLW6-3V3TzWKVks\"\nAPI_URL=\"https://barkpark-production.up.railway.app/api\"\n\necho \"Testing User Profile Update with valid phone...\"\ncurl -s -X PUT \"$API_URL/auth/me\" \\\n  -H \"Authorization: Bearer $TOKEN\" \\\n  -H \"Content-Type: application/json\" \\\n  -d '{\n    \"firstName\": \"Updated\",\n    \"lastName\": \"Name\",\n    \"phone\": \"12125551234\",\n    \"isSearchable\": false\n  }' | jq .)",
      "Bash(# Test user search\nTOKEN=\"eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VySWQiOjExLCJpYXQiOjE3NDk5MTQ5NzYsImV4cCI6MTc1MDUxOTc3Nn0.6t7Eu4mE0CxYR4dpnSd-Oxa9XeXWfLW6-3V3TzWKVks\"\nAPI_URL=\"https://barkpark-production.up.railway.app/api\"\n\necho \"Testing User Search...\"\ncurl -s -X GET \"$API_URL/auth/search?q=test\" \\\n  -H \"Authorization: Bearer $TOKEN\" | jq .)",
      "Bash(# Test creating a dog\nTOKEN=\"eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VySWQiOjExLCJpYXQiOjE3NDk5MTQ5NzYsImV4cCI6MTc1MDUxOTc3Nn0.6t7Eu4mE0CxYR4dpnSd-Oxa9XeXWfLW6-3V3TzWKVks\"\nAPI_URL=\"https://barkpark-production.up.railway.app/api\"\n\necho \"Testing Create Dog...\"\ncurl -s -X POST \"$API_URL/dogs\" \\\n  -H \"Authorization: Bearer $TOKEN\" \\\n  -H \"Content-Type: application/json\" \\\n  -d '{\n    \"name\": \"Buddy\",\n    \"breed\": \"Golden Retriever\",\n    \"age\": 3,\n    \"weight\": 65.5,\n    \"description\": \"Friendly and energetic dog\",\n    \"isFriendly\": true,\n    \"isVaccinated\": true\n  }' | jq .)",
      "Bash(# Test creating a dog with correct fields\nTOKEN=\"eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VySWQiOjExLCJpYXQiOjE3NDk5MTQ5NzYsImV4cCI6MTc1MDUxOTc3Nn0.6t7Eu4mE0CxYR4dpnSd-Oxa9XeXWfLW6-3V3TzWKVks\"\nAPI_URL=\"https://barkpark-production.up.railway.app/api\"\n\necho \"Testing Create Dog with correct fields...\"\ncurl -s -X POST \"$API_URL/dogs\" \\\n  -H \"Authorization: Bearer $TOKEN\" \\\n  -H \"Content-Type: application/json\" \\\n  -d '{\n    \"name\": \"Buddy\",\n    \"breed\": \"Golden Retriever\",\n    \"birthday\": \"2021-06-15\",\n    \"weight\": 65.5,\n    \"gender\": \"male\",\n    \"sizeCategory\": \"large\",\n    \"energyLevel\": \"high\",\n    \"friendlinessDogs\": 5,\n    \"friendlinessPeople\": 5,\n    \"trainingLevel\": \"advanced\",\n    \"favoriteActivities\": [\"fetch\", \"swimming\", \"running\"],\n    \"isVaccinated\": true,\n    \"isSpayedNeutered\": true,\n    \"bio\": \"Buddy is a friendly golden retriever who loves to play!\"\n  }' | jq .)",
      "Bash(# Test creating a dog with minimal data\nTOKEN=\"eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VySWQiOjExLCJpYXQiOjE3NDk5MTQ5NzYsImV4cCI6MTc1MDUxOTc3Nn0.6t7Eu4mE0CxYR4dpnSd-Oxa9XeXWfLW6-3V3TzWKVks\"\nAPI_URL=\"https://barkpark-production.up.railway.app/api\"\n\necho \"Testing Create Dog with minimal data...\"\ncurl -s -X POST \"$API_URL/dogs\" \\\n  -H \"Authorization: Bearer $TOKEN\" \\\n  -H \"Content-Type: application/json\" \\\n  -d '{\n    \"name\": \"Max\"\n  }' | jq .)",
      "Bash(# Create a test user first to get a fresh token\nAPI_URL=\"https://barkpark-production.up.railway.app/api\"\nEMAIL=\"dogtest_$(date +%s)@example.com\"\n\necho \"Creating fresh test user...\"\nREGISTER_RESPONSE=$(curl -s -X POST \"$API_URL/auth/register\" \\\n  -H \"Content-Type: application/json\" \\\n  -d \"{\n    \\\"email\\\": \\\"$EMAIL\\\",\n    \\\"password\\\": \\\"TestPassword123!\\\",\n    \\\"firstName\\\": \\\"Dog\\\",\n    \\\"lastName\\\": \\\"Tester\\\"\n  }\")\n\nTOKEN=$(echo \"$REGISTER_RESPONSE\" | grep -o '\"token\":\"[^\"]*' | sed 's/\"token\":\"//')\necho \"Got token: ${TOKEN:0:20}...\"\n\n# Now create a dog\necho -e \"\\nCreating dog...\"\ncurl -s -X POST \"$API_URL/dogs\" \\\n  -H \"Authorization: Bearer $TOKEN\" \\\n  -H \"Content-Type: application/json\" \\\n  -d '{\n    \"name\": \"TestDog\"\n  }' | jq .)",
      "Bash(# Create a test user first to get a fresh token\nAPI_URL=\"https://barkpark-production.up.railway.app/api\"\nEMAIL=\"dogtest_$(date +%s)@example.com\"\n\necho \"Creating fresh test user...\"\nREGISTER_RESPONSE=$(curl -s -X POST \"$API_URL/auth/register\" \\\n  -H \"Content-Type: application/json\" \\\n  -d \"{\n    \\\"email\\\": \\\"$EMAIL\\\",\n    \\\"password\\\": \\\"TestPassword123!\\\",\n    \\\"firstName\\\": \\\"Dog\\\",\n    \\\"lastName\\\": \\\"Tester\\\"\n  }\")\n\necho \"Registration response: $REGISTER_RESPONSE\"\nTOKEN=$(echo \"$REGISTER_RESPONSE\" | jq -r '.token')\necho \"Got token: ${TOKEN:0:20}...\"\n\n# Now create a dog\necho -e \"\\nCreating dog...\"\ncurl -s -X POST \"$API_URL/dogs\" \\\n  -H \"Authorization: Bearer $TOKEN\" \\\n  -H \"Content-Type: application/json\" \\\n  -d '{\n    \"name\": \"TestDog\"\n  }' -w \"\\nHTTP Status: %{http_code}\\n\")",
      "Bash(# Test park endpoints\nTOKEN=\"eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VySWQiOjEzLCJpYXQiOjE3NDk5MTYxMDQsImV4cCI6MTc1MDUyMDkwNH0.tXvHiRvLl_mQqbMXvXz2dz0YFj9-cVPx9bPuU_IxlHs\"\nAPI_URL=\"https://barkpark-production.up.railway.app/api\"\n\necho \"=== Testing Park Endpoints ===\"\necho \"\"\n\necho \"1. Get parks near NYC...\"\ncurl -s -X GET \"$API_URL/parks?latitude=40.7128&longitude=-74.0060&radius=5\" \\\n  -H \"Authorization: Bearer $TOKEN\" | jq '.parks | length'\n\necho \"\"\necho \"2. Search parks...\"\ncurl -s -X GET \"$API_URL/parks/search?q=Washington\" \\\n  -H \"Authorization: Bearer $TOKEN\" | jq '.parks | map(.name)'\n\necho \"\"\necho \"3. Get specific park details...\"\ncurl -s -X GET \"$API_URL/parks/92\" \\\n  -H \"Authorization: Bearer $TOKEN\" | jq '.park | {name, address, rating, currentVisitors}'\n\necho \"\"\necho \"4. Test check-in...\"\nCHECKIN_RESPONSE=$(curl -s -X POST \"$API_URL/parks/92/checkin\" \\\n  -H \"Authorization: Bearer $TOKEN\" \\\n  -H \"Content-Type: application/json\" \\\n  -d '{\"dogIds\": []}')\necho \"Check-in response: $CHECKIN_RESPONSE\"\n\necho \"\"\necho \"5. Test check-out...\"\ncurl -s -X POST \"$API_URL/parks/92/checkout\" \\\n  -H \"Authorization: Bearer $TOKEN\" | jq .)",
      "Bash(# Get fresh token\nAPI_URL=\"https://barkpark-production.up.railway.app/api\"\nEMAIL=\"parktest_$(date +%s)@example.com\"\n\n# Register new user\nREGISTER_RESPONSE=$(curl -s -X POST \"$API_URL/auth/register\" \\\n  -H \"Content-Type: application/json\" \\\n  -d \"{\n    \\\"email\\\": \\\"$EMAIL\\\",\n    \\\"password\\\": \\\"TestPassword123!\\\",\n    \\\"firstName\\\": \\\"Park\\\",\n    \\\"lastName\\\": \\\"Tester\\\"\n  }\")\n\nTOKEN=$(echo \"$REGISTER_RESPONSE\" | jq -r '.token')\necho \"Got fresh token\"\n\necho \"\"\necho \"1. Get parks near NYC (5km radius)...\"\ncurl -s -X GET \"$API_URL/parks?latitude=40.7128&longitude=-74.0060&radius=5\" \\\n  -H \"Authorization: Bearer $TOKEN\" | jq '{total: .total, first_park: .parks[0].name}'\n\necho \"\"\necho \"2. Get parks with larger radius (20km)...\"\ncurl -s -X GET \"$API_URL/parks?latitude=40.7128&longitude=-74.0060&radius=20\" \\\n  -H \"Authorization: Bearer $TOKEN\" | jq '.total'\n\necho \"\"\necho \"3. Search for Central Park...\"\ncurl -s -X GET \"$API_URL/parks/search?q=Central\" \\\n  -H \"Authorization: Bearer $TOKEN\" | jq '.parks | map(.name)')",
      "Bash(# Get fresh token and test parks endpoint with verbose output\nAPI_URL=\"https://barkpark-production.up.railway.app/api\"\n\n# Use the existing token from user 13\nTOKEN=\"eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VySWQiOjEzLCJpYXQiOjE3NDk5MTYxMDQsImV4cCI6MTc1MDUyMDkwNH0.tXvHiRvLl_mQqbMXvXz2dz0YFj9-cVPx9bPuU_IxlHs\"\n\n# First verify token is still valid\necho \"Testing token validity...\"\ncurl -s -X GET \"$API_URL/auth/me\" \\\n  -H \"Authorization: Bearer $TOKEN\" \\\n  -w \"\\nHTTP Status: %{http_code}\\n\"\n\n# If token is invalid, get a new one\nif [ $? -ne 0 ]; then\n  echo \"Getting new token...\"\n  REGISTER_RESPONSE=$(curl -s -X POST \"$API_URL/auth/register\" \\\n    -H \"Content-Type: application/json\" \\\n    -d \"{\n      \\\"email\\\": \\\"parktest2_$(date +%s)@example.com\\\",\n      \\\"password\\\": \\\"TestPassword123!\\\",\n      \\\"firstName\\\": \\\"Park\\\",\n      \\\"lastName\\\": \\\"Tester\\\"\n    }\")\n  TOKEN=$(echo \"$REGISTER_RESPONSE\" | jq -r '.token')\nfi\n\necho -e \"\\nTesting parks endpoint with raw response...\"\ncurl -X GET \"$API_URL/parks?latitude=40.7128&longitude=-74.0060&radius=5\" \\\n  -H \"Authorization: Bearer $TOKEN\" \\\n  -H \"Accept: application/json\" \\\n  -o parks_response.json \\\n  -w \"\\nHTTP Status: %{http_code}\\nContent-Type: %{content_type}\\nSize: %{size_download} bytes\\n\"\n\necho -e \"\\nResponse content:\"\ncat parks_response.json | head -200)",
      "Bash(# Register new user and test parks\nAPI_URL=\"https://barkpark-production.up.railway.app/api\"\nEMAIL=\"parkfinal_$(date +%s)@example.com\"\n\necho \"Registering new user...\"\nREGISTER_RESPONSE=$(curl -s -X POST \"$API_URL/auth/register\" \\\n  -H \"Content-Type: application/json\" \\\n  -d \"{\n    \\\"email\\\": \\\"$EMAIL\\\",\n    \\\"password\\\": \\\"TestPassword123!\\\",\n    \\\"firstName\\\": \\\"Park\\\",\n    \\\"lastName\\\": \\\"Final\\\"\n  }\")\n\necho \"Registration response: $REGISTER_RESPONSE\"\nTOKEN=$(echo \"$REGISTER_RESPONSE\" | jq -r '.token')\n\nif [ \"$TOKEN\" != \"null\" ] && [ -n \"$TOKEN\" ]; then\n  echo -e \"\\nGot token, testing parks...\"\n  \n  # Test parks endpoint\n  echo -e \"\\n1. Getting parks near NYC (radius 5km)...\"\n  PARKS_RESPONSE=$(curl -s -X GET \"$API_URL/parks?latitude=40.7128&longitude=-74.0060&radius=5\" \\\n    -H \"Authorization: Bearer $TOKEN\")\n  \n  echo \"Parks response: $PARKS_RESPONSE\" | head -100\n  \n  # Test park search\n  echo -e \"\\n2. Searching for Central Park...\"\n  SEARCH_RESPONSE=$(curl -s -X GET \"$API_URL/parks/search?q=Central\" \\\n    -H \"Authorization: Bearer $TOKEN\")\n  \n  echo \"Search response: $SEARCH_RESPONSE\"\n  \n  # Test specific park\n  echo -e \"\\n3. Getting park ID 92 details...\"\n  PARK_RESPONSE=$(curl -s -X GET \"$API_URL/parks/92\" \\\n    -H \"Authorization: Bearer $TOKEN\")\n  \n  echo \"Park details: $PARK_RESPONSE\" | jq '.park | {name, address, rating}'\nelse\n  echo \"Failed to get token\"\nfi)"
    ],
    "deny": []
  }
}